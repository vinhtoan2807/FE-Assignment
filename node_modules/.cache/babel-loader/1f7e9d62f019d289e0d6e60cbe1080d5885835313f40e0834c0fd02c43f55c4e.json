{"ast":null,"code":"var _jsxFileName = \"/Users/vinhtoan287/Desktop/FE-Assignment/src/components/ListNotifications/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotifications, markNotificationAsRead } from \"../../API\";\nimport Notifications from \"../Notifications/index\";\nimport Pagination from \"../Modules/Pagination/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListNotifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getNotifications(10, currentPage);\n        console.log(data);\n        setNotifications(data.data);\n        setTotalPages(data.totalPages);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n  }, [currentPage]);\n  const markAsRead = async notificationId => {\n    try {\n      await markNotificationAsRead(notificationId);\n      setNotifications(prevNotifications => prevNotifications.map(notification => notification.id === notificationId ? {\n        ...notification,\n        isRead: true\n      } : notification));\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this));\n    }\n    return pageNumbers;\n  };\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"notification-title\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notification-list\",\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Notifications, {\n        notification: notification,\n        markAsRead: markAsRead\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), renderPageNumbers(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === totalPages,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ListNotifications, \"NUw59PiZHcqB1Sgbt4Edp44wd04=\");\n_c = ListNotifications;\nexport default ListNotifications;\nvar _c;\n$RefreshReg$(_c, \"ListNotifications\");","map":{"version":3,"names":["React","useState","useEffect","getNotifications","markNotificationAsRead","Notifications","Pagination","jsxDEV","_jsxDEV","ListNotifications","_s","notifications","setNotifications","currentPage","setCurrentPage","totalPages","setTotalPages","fetchNotifications","data","console","log","error","markAsRead","notificationId","prevNotifications","map","notification","id","isRead","handlePageChange","page","renderPageNumbers","pageNumbers","i","push","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","handleNextPage","handlePreviousPage","className","disabled","_c","$RefreshReg$"],"sources":["/Users/vinhtoan287/Desktop/FE-Assignment/src/components/ListNotifications/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getNotifications, markNotificationAsRead } from \"../../API\";\nimport Notifications from \"../Notifications/index\";\nimport Pagination from \"../Modules/Pagination/index\";\nconst ListNotifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getNotifications(10, currentPage);\n        console.log(data);\n        setNotifications(data.data);\n        setTotalPages(data.totalPages);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n\n    fetchNotifications();\n  }, [currentPage]);\n\n  const markAsRead = async (notificationId) => {\n    try {\n      await markNotificationAsRead(notificationId);\n      setNotifications((prevNotifications) =>\n        prevNotifications.map((notification) =>\n          notification.id === notificationId\n            ? { ...notification, isRead: true }\n            : notification\n        )\n      );\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pageNumbers.push(\n        <button key={i} onClick={() => handlePageChange(i)}>\n          {i}\n        </button>\n      );\n    }\n    return pageNumbers;\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return (\n    <div className=\"notification\">\n      <h2 className=\"notification-title\">Notifications</h2>\n      <ul className=\"notification-list\">\n        {notifications.map((notification) => (\n          <Notifications\n            key={notification.id}\n            notification={notification}\n            markAsRead={markAsRead}\n          />\n        ))}\n      </ul>\n      <div className=\"pagination-buttons\">\n        <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n          Previous Page\n        </button>\n        {renderPageNumbers()}\n        <button onClick={handleNextPage} disabled={currentPage === totalPages}>\n          Next Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ListNotifications;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}