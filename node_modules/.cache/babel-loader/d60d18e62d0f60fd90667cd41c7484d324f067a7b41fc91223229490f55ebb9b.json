{"ast":null,"code":"var _jsxFileName = \"/Users/vinhtoan287/Desktop/FE-Assignment/src/components/ListNotifications/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotifications, markNotificationAsRead } from \"../../API\";\nimport Notifications from \"../Notifications/index\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListNotifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getNotifications(10, currentPage);\n        setNotifications(data.data);\n        setTotalPages(Math.ceil(data.totalRecords / 10));\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n  }, [currentPage]);\n  const markAsRead = async notificationId => {\n    try {\n      await markNotificationAsRead(notificationId);\n      setNotifications(prevNotifications => prevNotifications.map(notification => notification.id === notificationId ? {\n        ...notification,\n        isRead: true\n      } : notification));\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"notification-title\",\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"notification-list\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Notifications, {\n          notification: notification,\n          markAsRead: markAsRead\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-buttons\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: totalPages,\n            page: currentPage,\n            onChange: handlePageChange,\n            variant: \"outlined\",\n            shape: \"rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ListNotifications, \"NUw59PiZHcqB1Sgbt4Edp44wd04=\");\n_c = ListNotifications;\nexport default ListNotifications;\nvar _c;\n$RefreshReg$(_c, \"ListNotifications\");","map":{"version":3,"names":["React","useState","useEffect","getNotifications","markNotificationAsRead","Notifications","Pagination","Stack","jsxDEV","_jsxDEV","ListNotifications","_s","notifications","setNotifications","currentPage","setCurrentPage","totalPages","setTotalPages","fetchNotifications","data","Math","ceil","totalRecords","error","console","markAsRead","notificationId","prevNotifications","map","notification","id","isRead","handlePageChange","event","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","spacing","count","onChange","variant","shape","_c","$RefreshReg$"],"sources":["/Users/vinhtoan287/Desktop/FE-Assignment/src/components/ListNotifications/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getNotifications, markNotificationAsRead } from \"../../API\";\nimport Notifications from \"../Notifications/index\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\n\nconst ListNotifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getNotifications(10, currentPage);\n        setNotifications(data.data);\n        setTotalPages(Math.ceil(data.totalRecords / 10));\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n\n    fetchNotifications();\n  }, [currentPage]);\n\n  const markAsRead = async (notificationId) => {\n    try {\n      await markNotificationAsRead(notificationId);\n      setNotifications((prevNotifications) =>\n        prevNotifications.map((notification) =>\n          notification.id === notificationId\n            ? { ...notification, isRead: true }\n            : notification\n        )\n      );\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"notification\">\n      <h2 className=\"notification-title\">Notifications</h2>\n      <div className=\"notification-content\">\n        <ul className=\"notification-list\">\n          {notifications.map((notification) => (\n            <Notifications\n              key={notification.id}\n              notification={notification}\n              markAsRead={markAsRead}\n            />\n          ))}\n        </ul>\n        <div className=\"pagination-buttons\">\n          <Stack spacing={2}>\n            <Pagination\n              count={totalPages}\n              page={currentPage}\n              onChange={handlePageChange}\n              variant=\"outlined\"\n              shape=\"rounded\"\n            />\n          </Stack>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListNotifications;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}