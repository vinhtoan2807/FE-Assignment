{"ast":null,"code":"var _jsxFileName = \"/Users/vinhtoan287/Desktop/FE-Assignment/src/components/ListNotifications/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNotifications, getUserAvatar } from \"../../API\";\nimport Notifications from \"../Notifications/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListNotifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getNotifications();\n        setNotifications(data.data);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n    fetchNotifications();\n  }, []);\n  useEffect(() => {\n    const fetchAvatar = async () => {\n      try {\n        const data = await getUserAvatar(notification.createdUserId);\n        setAvatar(data.data);\n      } catch (error) {\n        console.error(\"Error fetching avatar:\", error);\n        setMessage(\"Error fetching avatar\");\n      }\n    };\n    fetchAvatar();\n  }, [notification.createdUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notification => {\n        return /*#__PURE__*/_jsxDEV(Notifications, {\n          notification: notification\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n        // <li key={notification.id}>{/* Display notification details */}</li>;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ListNotifications, \"2SdJNwZGCcacptfqR8s6ep7Bk7A=\");\n_c = ListNotifications;\nexport default ListNotifications;\nvar _c;\n$RefreshReg$(_c, \"ListNotifications\");","map":{"version":3,"names":["React","useState","useEffect","getNotifications","getUserAvatar","Notifications","jsxDEV","_jsxDEV","ListNotifications","_s","notifications","setNotifications","fetchNotifications","data","error","console","fetchAvatar","notification","createdUserId","setAvatar","setMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["/Users/vinhtoan287/Desktop/FE-Assignment/src/components/ListNotifications/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getNotifications, getUserAvatar } from \"../../API\";\nimport Notifications from \"../Notifications/index\";\nconst ListNotifications = () => {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getNotifications();\n        setNotifications(data.data);\n      } catch (error) {\n        console.error(\"Error fetching notifications:\", error);\n      }\n    };\n\n    fetchNotifications();\n  }, []);\n\n  useEffect(() => {\n    const fetchAvatar = async () => {\n      try {\n        const data = await getUserAvatar(notification.createdUserId);\n        setAvatar(data.data);\n      } catch (error) {\n        console.error(\"Error fetching avatar:\", error);\n        setMessage(\"Error fetching avatar\");\n      }\n    };\n\n    fetchAvatar();\n  }, [notification.createdUserId]);\n\n  return (\n    <div>\n      <h2>Notifications</h2>\n      <ul>\n        {notifications.map((notification) => {\n          return (\n            <Notifications key={notification.id} notification={notification} />\n          );\n          // <li key={notification.id}>{/* Display notification details */}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ListNotifications;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,WAAW;AAC3D,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,gBAAgB,CAAC,CAAC;QACrCQ,gBAAgB,CAACE,IAAI,CAACA,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDF,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMH,IAAI,GAAG,MAAMT,aAAa,CAACa,YAAY,CAACC,aAAa,CAAC;QAC5DC,SAAS,CAACN,IAAI,CAACA,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CM,UAAU,CAAC,uBAAuB,CAAC;MACrC;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACC,YAAY,CAACC,aAAa,CAAC,CAAC;EAEhC,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,EACGX,aAAa,CAACgB,GAAG,CAAET,YAAY,IAAK;QACnC,oBACEV,OAAA,CAACF,aAAa;UAAuBY,YAAY,EAAEA;QAAa,GAA5CA,YAAY,CAACU,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC;QAErE;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3CID,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AA6CvB,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}